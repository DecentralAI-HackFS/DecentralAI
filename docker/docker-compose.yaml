version: '3.1'
services:
  # API service
  api:
    image: peggy120/decentral-ai-api:1.2.0
    restart: always
    environment:
      # Server Edition
      EDITION: SELF_HOSTED
      # Your App secret key will be used for securely signing the session cookie
      # Make sure you are changing this key for your deployment with a strong key.
      # You can generate a strong key using `openssl rand -base64 42`.
      # Alternatively you can set it with `SECRET_KEY` environment variable.
      SECRET_KEY: JyaZ3yTsIUF3KRpbB85lHWpW6zcF+pscilcdTiC8MYsrirs9xnezFAjP
      # Console API base URL
      CONSOLE_URL: http://127.0.0.1:5001
      # Service API base URL
      API_URL: http://127.0.0.1:5001
      # Web APP base URL
      APP_URL: http://127.0.0.1:3000
      # celery configuration
      CELERY_BROKER_URL: redis://:difyai123456@localhost:6379/1
      # redis configuration
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD: difyai123456
      REDIS_DB: 0
      # PostgreSQL database configuration
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: dify
      # Storage configuration
      # use for store upload files, private keys...
      # storage type: local, s3, web3.storage
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      S3_ENDPOINT: https://your-bucket-name.storage.s3.clooudflare.com
      S3_BUCKET_NAME: your-bucket-name
      S3_ACCESS_KEY: your-access-key
      S3_SECRET_KEY: your-secret-key
      S3_REGION: your-region
      WEB3_STORAGE_API_KEY: your-web3-storage-api-key
      # CORS configuration
      WEB_API_CORS_ALLOW_ORIGINS: http://127.0.0.1:3000,*
      CONSOLE_CORS_ALLOW_ORIGINS: http://127.0.0.1:3000,*
      # Cookie configuration
      COOKIE_HTTPONLY: true
      COOKIE_SAMESITE: None
      COOKIE_SECURE: true
      # Session configuration
      SESSION_PERMANENT: true
      SESSION_USE_SIGNER: true
      ## support redis, sqlalchemy
      SESSION_TYPE: redis
      # session redis configuration
      SESSION_REDIS_HOST: localhost
      SESSION_REDIS_PORT: 6379
      SESSION_REDIS_PASSWORD: difyai123456
      SESSION_REDIS_DB: 2
      # Vector database configuration, support: weaviate, qdrant
      VECTOR_STORE: weaviate
      # Weaviate configuration
      WEAVIATE_ENDPOINT: http://localhost:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      WEAVIATE_GRPC_ENABLED: false
      # Qdrant configuration, use `path:` prefix for local mode or `https://your-qdrant-cluster-url.qdrant.io` for remote mode
      QDRANT_URL: path:storage/qdrant
      QDRANT_API_KEY: your-qdrant-api-key
      # Sentry configuration
      SENTRY_DSN: 
      # DEBUG
      DEBUG: false
      SQLALCHEMY_ECHO: false
      MORALIS_API_KEY: Ytdy1vawDxVhtVxAb1KXhRg3kJ7eqN35x7le8TCJaIp0i6SqBpYlnjeIw5EIjv1A
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./volumes/app/storage:/app/api/storage

  # worker service
  # The Celery worker for processing the queue.
  worker:
    image: peggy120/decentral-ai-api:1.2.0
    restart: always
    environment:
    # Server Edition
      EDITION: SELF_HOSTED
      # Your App secret key will be used for securely signing the session cookie
      # Make sure you are changing this key for your deployment with a strong key.
      # You can generate a strong key using `openssl rand -base64 42`.
      # Alternatively you can set it with `SECRET_KEY` environment variable.
      SECRET_KEY: JyaZ3yTsIUF3KRpbB85lHWpW6zcF+pscilcdTiC8MYsrirs9xnezFAjP
      # Console API base URL
      CONSOLE_URL: http://127.0.0.1:5001
      # Service API base URL
      API_URL: http://127.0.0.1:5001
      # Web APP base URL
      APP_URL: http://127.0.0.1:3000
      # celery configuration
      CELERY_BROKER_URL: redis://:difyai123456@localhost:6379/1
      # redis configuration
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD: difyai123456
      REDIS_DB: 0
      # PostgreSQL database configuration
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: dify
      # Storage configuration
      # use for store upload files, private keys...
      # storage type: local, s3, web3.storage
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      S3_ENDPOINT: https://your-bucket-name.storage.s3.clooudflare.com
      S3_BUCKET_NAME: your-bucket-name
      S3_ACCESS_KEY: your-access-key
      S3_SECRET_KEY: your-secret-key
      S3_REGION: your-region
      WEB3_STORAGE_API_KEY: your-web3-storage-api-key
      # CORS configuration
      WEB_API_CORS_ALLOW_ORIGINS: http://127.0.0.1:3000,*
      CONSOLE_CORS_ALLOW_ORIGINS: http://127.0.0.1:3000,*
      # Cookie configuration
      COOKIE_HTTPONLY: true
      COOKIE_SAMESITE: None
      COOKIE_SECURE: true
      # Session configuration
      SESSION_PERMANENT: true
      SESSION_USE_SIGNER: true
      ## support redis, sqlalchemy
      SESSION_TYPE: redis
      # session redis configuration
      SESSION_REDIS_HOST: localhost
      SESSION_REDIS_PORT: 6379
      SESSION_REDIS_PASSWORD: difyai123456
      SESSION_REDIS_DB: 2
      # Vector database configuration, support: weaviate, qdrant
      VECTOR_STORE: weaviate
      # Weaviate configuration
      WEAVIATE_ENDPOINT: http://localhost:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      WEAVIATE_GRPC_ENABLED: false
      # Qdrant configuration, use `path:` prefix for local mode or `https://your-qdrant-cluster-url.qdrant.io` for remote mode
      QDRANT_URL: path:storage/qdrant
      QDRANT_API_KEY: your-qdrant-api-key
      # Sentry configuration
      SENTRY_DSN: 
      # DEBUG
      DEBUG: false
      SQLALCHEMY_ECHO: false
      MORALIS_API_KEY: Ytdy1vawDxVhtVxAb1KXhRg3kJ7eqN35x7le8TCJaIp0i6SqBpYlnjeIw5EIjv1A
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./volumes/app/storage:/app/api/storage

  # Frontend web application.
  web:
    image: peggy120/decentral-ai-web:1.2.0
    restart: always
    environment:
      EDITION: SELF_HOSTED
      # The base URL of console application, refers to the Console base URL of WEB service if console domain is
      # different from api or web app domain.
      # example: http://cloud.dify.ai
      CONSOLE_URL: ''
      # The URL for Web APP, refers to the Web App base URL of WEB service if web app domain is different from
      # console or api domain.
      # example: http://udify.app
      APP_URL: ''

  # The postgres database.
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      # The password for the default postgres user.
      POSTGRES_PASSWORD: difyai123456
      # The name of the default postgres database.
      POSTGRES_DB: dify
      # postgres data directory
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # The redis cache.
  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      # Mount the redis data directory to the container.
      - ./volumes/redis/data:/data
    # Set the redis password when startup redis server.
    command: redis-server --requirepass difyai123456
    ports:
      - "6379:6379"

  # The Weaviate vector store.
  weaviate:
    image: semitechnologies/weaviate:1.18.4
    restart: always
    volumes:
      # Mount the Weaviate data directory to the container.
      - ./volumes/weaviate:/var/lib/weaviate
    environment:
      # The Weaviate configurations
      # You can refer to the [Weaviate](https://weaviate.io/developers/weaviate/config-refs/env-vars) documentation for more information.
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih'
      AUTHENTICATION_APIKEY_USERS: 'hello@dify.ai'
      AUTHORIZATION_ADMINLIST_ENABLED: 'true'
      AUTHORIZATION_ADMINLIST_USERS: 'hello@dify.ai'
    ports:
      - "8080:8080"

  # The nginx reverse proxy.
  # used for reverse proxying the API service and Web service.
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - api
      - web
    ports:
      - "80:80"
      - "443:443"
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
